class Aircraft():
    name = "Aircraft"
    classnames = [
                            "707-320",
                            "727-200",
                            "737-200",
                            "737-300",
                            "737-400",
                            "737-500",
                            "737-600",
                            "737-700",
                            "737-800",
                            "737-900",
                            "747-100",
                            "747-200",
                            "747-300",
                            "747-400",
                            "757-200",
                            "757-300",
                            "767-200",
                            "767-300",
                            "767-400",
                            "777-200",
                            "777-300",
                            "A300B4",
                            "A310",
                            "A318",
                            "A319",
                            "A320",
                            "A321",
                            "A330-200",
                            "A330-300",
                            "A340-200",
                            "A340-300",
                            "A340-500",
                            "A340-600",
                            "A380",
                            "ATR-42",
                            "ATR-72",
                            "An-12",
                            "BAE 146-200",
                            "BAE 146-300",
                            "BAE-125",
                            "Beechcraft 1900",
                            "Boeing 717",
                            "C-130",
                            "C-47",
                            "CRJ-200",
                            "CRJ-700",
                            "CRJ-900",
                            "Cessna 172",
                            "Cessna 208",
                            "Cessna 525",
                            "Cessna 560",
                            "Challenger 600",
                            "DC-10",
                            "DC-3",
                            "DC-6",
                            "DC-8",
                            "DC-9-30",
                            "DH-82",
                            "DHC-1",
                            "DHC-6",
                            "DHC-8-100",
                            "DHC-8-300",
                            "DR-400",
                            "Dornier 328",
                            "E-170",
                            "E-190",
                            "E-195",
                            "EMB-120",
                            "ERJ 135",
                            "ERJ 145",
                            "Embraer Legacy 600",
                            "Eurofighter Typhoon",
                            "F-16A/B",
                            "F/A-18",
                            "Falcon 2000",
                            "Falcon 900",
                            "Fokker 100",
                            "Fokker 50",
                            "Fokker 70",
                            "Global Express",
                            "Gulfstream IV",
                            "Gulfstream V",
                            "Hawk T1",
                            "Il-76",
                            "L-1011",
                            "MD-11",
                            "MD-80",
                            "MD-87",
                            "MD-90",
                            "Metroliner",
                            "Model B200",
                            "PA-28",
                            "SR-20",
                            "Saab 2000",
                            "Saab 340",
                            "Spitfire",
                            "Tornado",
                            "Tu-134",
                            "Tu-154",
                            "Yak-42"
                        ]
    templates = [
            lambda c: f"a photo of a {c}, a type of aircraft.",
            lambda c: f"a photo of the {c}, a type of aircraft.",
        ]

class Caltech101():
    name = "Caltech101"

    classnames = [
            "off-center face",
            "centered face",
            "leopard",
            "motorbike",
            "accordion",
            "airplane",
            "anchor",
            "ant",
            "barrel",
            "bass",
            "beaver",
            "binocular",
            "bonsai",
            "brain",
            "brontosaurus",
            "buddha",
            "butterfly",
            "camera",
            "cannon",
            "side of a car",
            "ceiling fan",
            "cellphone",
            "chair",
            "chandelier",
            "body of a cougar cat",
            "face of a cougar cat",
            "crab",
            "crayfish",
            "crocodile",
            "head of a  crocodile",
            "cup",
            "dalmatian",
            "dollar bill",
            "dolphin",
            "dragonfly",
            "electric guitar",
            "elephant",
            "emu",
            "euphonium",
            "ewer",
            "ferry",
            "flamingo",
            "head of a flamingo",
            "garfield",
            "gerenuk",
            "gramophone",
            "grand piano",
            "hawksbill",
            "headphone",
            "hedgehog",
            "helicopter",
            "ibis",
            "inline skate",
            "joshua tree",
            "kangaroo",
            "ketch",
            "lamp",
            "laptop",
            "llama",
            "lobster",
            "lotus",
            "mandolin",
            "mayfly",
            "menorah",
            "metronome",
            "minaret",
            "nautilus",
            "octopus",
            "okapi",
            "pagoda",
            "panda",
            "pigeon",
            "pizza",
            "platypus",
            "pyramid",
            "revolver",
            "rhino",
            "rooster",
            "saxophone",
            "schooner",
            "scissors",
            "scorpion",
            "sea horse",
            "snoopy (cartoon beagle)",
            "soccer ball",
            "stapler",
            "starfish",
            "stegosaurus",
            "stop sign",
            "strawberry",
            "sunflower",
            "tick",
            "trilobite",
            "umbrella",
            "watch",
            "water lilly",
            "wheelchair",
            "wild cat",
            "windsor chair",
            "wrench",
            "yin and yang symbol"
        ]

    templates = [
            lambda c: f"a photo of a {c}.",
            lambda c: f"a painting of a {c}.",
            lambda c: f"a plastic {c}.",
            lambda c: f"a sculpture of a {c}.",
            lambda c: f"a sketch of a {c}.",
            lambda c: f"a tattoo of a {c}.",
            lambda c: f"a toy {c}.",
            lambda c: f"a rendition of a {c}.",
            lambda c: f"a embroidered {c}.",
            lambda c: f"a cartoon {c}.",
            lambda c: f"a {c} in a video game.",
            lambda c: f"a plushie {c}.",
            lambda c: f"a origami {c}.",
            lambda c: f"art of a {c}.",
            lambda c: f"graffiti of a {c}.",
            lambda c: f"a drawing of a {c}.",
            lambda c: f"a doodle of a {c}.",
            lambda c: f"a photo of the {c}.",
            lambda c: f"a painting of the {c}.",
            lambda c: f"the plastic {c}.",
            lambda c: f"a sculpture of the {c}.",
            lambda c: f"a sketch of the {c}.",
            lambda c: f"a tattoo of the {c}.",
            lambda c: f"the toy {c}.",
            lambda c: f"a rendition of the {c}.",
            lambda c: f"the embroidered {c}.",
            lambda c: f"the cartoon {c}.",
            lambda c: f"the {c} in a video game.",
            lambda c: f"the plushie {c}.",
            lambda c: f"the origami {c}.",
            lambda c: f"art of the {c}.",
            lambda c: f"graffiti of the {c}.",
            lambda c: f"a drawing of the {c}.",
            lambda c: f"a doodle of the {c}.",
        ]


class MNIST():
    name = "MNIST"
    classnames =  [
            "0 - zero",
            "1 - one",
            "2 - two",
            "3 - three",
            "4 - four",
            "5 - five",
            "6 - six",
            "7 - seven",
            "8 - eight",
            "9 - nine"
        ]

    templates = [
            lambda c: f'a photo of the number: "{c}".',
        ]


class CIFAR100():
    name = "CIFAR100"

    classnames = [
                            "apple",
                            "aquarium fish",
                            "baby",
                            "bear",
                            "beaver",
                            "bed",
                            "bee",
                            "beetle",
                            "bicycle",
                            "bottle",
                            "bowl",
                            "boy",
                            "bridge",
                            "bus",
                            "butterfly",
                            "camel",
                            "can",
                            "castle",
                            "caterpillar",
                            "cattle",
                            "chair",
                            "chimpanzee",
                            "clock",
                            "cloud",
                            "cockroach",
                            "couch",
                            "crab",
                            "crocodile",
                            "cup",
                            "dinosaur",
                            "dolphin",
                            "elephant",
                            "flatfish",
                            "forest",
                            "fox",
                            "girl",
                            "hamster",
                            "house",
                            "kangaroo",
                            "keyboard",
                            "lamp",
                            "lawn mower",
                            "leopard",
                            "lion",
                            "lizard",
                            "lobster",
                            "man",
                            "maple tree",
                            "motorcycle",
                            "mountain",
                            "mouse",
                            "mushroom",
                            "oak tree",
                            "orange",
                            "orchid",
                            "otter",
                            "palm tree",
                            "pear",
                            "pickup truck",
                            "pine tree",
                            "plain",
                            "plate",
                            "poppy",
                            "porcupine",
                            "possum",
                            "rabbit",
                            "raccoon",
                            "ray",
                            "road",
                            "rocket",
                            "rose",
                            "sea",
                            "seal",
                            "shark",
                            "shrew",
                            "skunk",
                            "skyscraper",
                            "snail",
                            "snake",
                            "spider",
                            "squirrel",
                            "streetcar",
                            "sunflower",
                            "sweet pepper",
                            "table",
                            "tank",
                            "telephone",
                            "television",
                            "tiger",
                            "tractor",
                            "train",
                            "trout",
                            "tulip",
                            "turtle",
                            "wardrobe",
                            "whale",
                            "willow tree",
                            "wolf",
                            "woman",
                            "worm"
        ]
    templates = [
            lambda c: f"a photo of a {c}.",
            lambda c: f"a blurry photo of a {c}.",
            lambda c: f"a black and white photo of a {c}.",
            lambda c: f"a low contrast photo of a {c}.",
            lambda c: f"a high contrast photo of a {c}.",
            lambda c: f"a bad photo of a {c}.",
            lambda c: f"a good photo of a {c}.",
            lambda c: f"a photo of a small {c}.",
            lambda c: f"a photo of a big {c}.",
            lambda c: f"a photo of the {c}.",
            lambda c: f"a blurry photo of the {c}.",
            lambda c: f"a black and white photo of the {c}.",
            lambda c: f"a low contrast photo of the {c}.",
            lambda c: f"a high contrast photo of the {c}.",
            lambda c: f"a bad photo of the {c}.",
            lambda c: f"a good photo of the {c}.",
            lambda c: f"a photo of the small {c}.",
            lambda c: f"a photo of the big {c}."
        ]



class DTD():
    name = "DTD"

    classnames = [
            "banded",
            "blotchy",
            "braided",
            "bubbly",
            "bumpy",
            "chequered",
            "cobwebbed",
            "cracked",
            "crosshatched",
            "crystalline",
            "dotted",
            "fibrous",
            "flecked",
            "freckled",
            "frilly",
            "gauzy",
            "grid",
            "grooved",
            "honeycombed",
            "interlaced",
            "knitted",
            "lacelike",
            "lined",
            "marbled",
            "matted",
            "meshed",
            "paisley",
            "perforated",
            "pitted",
            "pleated",
            "polka-dotted",
            "porous",
            "potholed",
            "scaly",
            "smeared",
            "spiralled",
            "sprinkled",
            "stained",
            "stratified",
            "striped",
            "studded",
            "swirly",
            "veined",
            "waffled",
            "woven",
            "wrinkled",
            "zigzagged"
        ]
    
    templates = [
            lambda c: f"a photo of a {c} texture.",
            lambda c: f"a photo of a {c} pattern.",
            lambda c: f"a photo of a {c} thing.",
            lambda c: f"a photo of a {c} object.",
            lambda c: f"a photo of the {c} texture.",
            lambda c: f"a photo of the {c} pattern.",
            lambda c: f"a photo of the {c} thing.",
            lambda c: f"a photo of the {c} object."
        ]


class EuroSAT():
    name = "EuroSAT"

    classnames = [
            "annual crop land",
            "forest",
            "brushland or shrubland",
            "highway or road",
            "industrial buildings or commercial buildings",
            "pasture land",
            "permanent crop land",
            "residential buildings or homes or apartments",
            "river",
            "lake or sea"
        ]
    
    templates = [
            lambda c: f"a centered satellite photo of {c}.",
            lambda c: f"a centered satellite photo of a {c}.",
            lambda c: f"a centered satellite photo of the {c}."
        ]

class Flowers():
    name = "Flowers"

    classnames = [
            "pink primrose",
            "hard-leaved pocket orchid",
            "canterbury bells",
            "sweet pea",
            "english marigold",
            "tiger lily",
            "moon orchid",
            "bird of paradise",
            "monkshood",
            "globe thistle",
            "snapdragon",
            "colt's foot",
            "king protea",
            "spear thistle",
            "yellow iris",
            "globe-flower",
            "purple coneflower",
            "peruvian lily",
            "balloon flower",
            "giant white arum lily",
            "fire lily",
            "pincushion flower",
            "fritillary",
            "red ginger",
            "grape hyacinth",
            "corn poppy",
            "prince of wales feathers",
            "stemless gentian",
            "artichoke",
            "sweet william",
            "carnation",
            "garden phlox",
            "love in the mist",
            "mexican aster",
            "alpine sea holly",
            "ruby-lipped cattleya",
            "cape flower",
            "great masterwort",
            "siam tulip",
            "lenten rose",
            "barbeton daisy",
            "daffodil",
            "sword lily",
            "poinsettia",
            "bolero deep blue",
            "wallflower",
            "marigold",
            "buttercup",
            "oxeye daisy",
            "common dandelion",
            "petunia",
            "wild pansy",
            "primula",
            "sunflower",
            "pelargonium",
            "bishop of llandaff",
            "gaura",
            "geranium",
            "orange dahlia",
            "pink-yellow dahlia",
            "cautleya spicata",
            "japanese anemone",
            "black-eyed susan",
            "silverbush",
            "californian poppy",
            "osteospermum",
            "spring crocus",
            "bearded iris",
            "windflower",
            "tree poppy",
            "gazania",
            "azalea",
            "water lily",
            "rose",
            "thorn apple",
            "morning glory",
            "passion flower",
            "lotus",
            "toad lily",
            "anthurium",
            "frangipani",
            "clematis",
            "hibiscus",
            "columbine",
            "desert-rose",
            "tree mallow",
            "magnolia",
            "cyclamen",
            "watercress",
            "canna lily",
            "hippeastrum",
            "bee balm",
            "ball moss",
            "foxglove",
            "bougainvillea",
            "camellia",
            "mallow",
            "mexican petunia",
            "bromelia",
            "blanket flower",
            "trumpet creeper",
            "blackberry lily"
        ]
    templates = [
            lambda c: f"a photo of a {c}, a type of flower."
        ]


class Food():
    name = "Food"

    classnames =  [
            "apple pie",
            "baby back ribs",
            "baklava",
            "beef carpaccio",
            "beef tartare",
            "beet salad",
            "beignets",
            "bibimbap",
            "bread pudding",
            "breakfast burrito",
            "bruschetta",
            "caesar salad",
            "cannoli",
            "caprese salad",
            "carrot cake",
            "ceviche",
            "cheese plate",
            "cheesecake",
            "chicken curry",
            "chicken quesadilla",
            "chicken wings",
            "chocolate cake",
            "chocolate mousse",
            "churros",
            "clam chowder",
            "club sandwich",
            "crab cakes",
            "creme brulee",
            "croque madame",
            "cup cakes",
            "deviled eggs",
            "donuts",
            "dumplings",
            "edamame",
            "eggs benedict",
            "escargots",
            "falafel",
            "filet mignon",
            "fish and chips",
            "foie gras",
            "french fries",
            "french onion soup",
            "french toast",
            "fried calamari",
            "fried rice",
            "frozen yogurt",
            "garlic bread",
            "gnocchi",
            "greek salad",
            "grilled cheese sandwich",
            "grilled salmon",
            "guacamole",
            "gyoza",
            "hamburger",
            "hot and sour soup",
            "hot dog",
            "huevos rancheros",
            "hummus",
            "ice cream",
            "lasagna",
            "lobster bisque",
            "lobster roll sandwich",
            "macaroni and cheese",
            "macarons",
            "miso soup",
            "mussels",
            "nachos",
            "omelette",
            "onion rings",
            "oysters",
            "pad thai",
            "paella",
            "pancakes",
            "panna cotta",
            "peking duck",
            "pho",
            "pizza",
            "pork chop",
            "poutine",
            "prime rib",
            "pulled pork sandwich",
            "ramen",
            "ravioli",
            "red velvet cake",
            "risotto",
            "samosa",
            "sashimi",
            "scallops",
            "seaweed salad",
            "shrimp and grits",
            "spaghetti bolognese",
            "spaghetti carbonara",
            "spring rolls",
            "steak",
            "strawberry shortcake",
            "sushi",
            "tacos",
            "takoyaki",
            "tiramisu",
            "tuna tartare",
            "waffles"
        ]
    
    templates = [
            lambda c: f"a photo of a {c}, a type of food."
        ]


class OxfordPet():
    name = "OxfordPet"

    classnames =  [
            "Abyssinian",
            "American Bulldog",
            "American Pit Bull Terrier",
            "Basset Hound",
            "Beagle",
            "Bengal",
            "Birman",
            "Bombay",
            "Boxer",
            "British Shorthair",
            "Chihuahua",
            "Egyptian Mau",
            "English Cocker Spaniel",
            "English Setter",
            "German Shorthaired",
            "Great Pyrenees",
            "Havanese",
            "Japanese Chin",
            "Keeshond",
            "Leonberger",
            "Maine Coon",
            "Miniature Pinscher",
            "Newfoundland",
            "Persian",
            "Pomeranian",
            "Pug",
            "Ragdoll",
            "Russian Blue",
            "Saint Bernard",
            "Samoyed",
            "Scottish Terrier",
            "Shiba Inu",
            "Siamese",
            "Sphynx",
            "Staffordshire Bull Terrier",
            "Wheaten Terrier",
            "Yorkshire Terrier"
        ]
    
    templates = [
            lambda c: f"a photo of a {c}, a type of pet."
        ]
    

class StanfordCars():
    name = "StanfordCars"
    classnames = [
            "AM General Hummer SUV 2000",
            "Acura RL Sedan 2012",
            "Acura TL Sedan 2012",
            "Acura TL Type-S 2008",
            "Acura TSX Sedan 2012",
            "Acura Integra Type R 2001",
            "Acura ZDX Hatchback 2012",
            "Aston Martin V8 Vantage Convertible 2012",
            "Aston Martin V8 Vantage Coupe 2012",
            "Aston Martin Virage Convertible 2012",
            "Aston Martin Virage Coupe 2012",
            "Audi RS 4 Convertible 2008",
            "Audi A5 Coupe 2012",
            "Audi TTS Coupe 2012",
            "Audi R8 Coupe 2012",
            "Audi V8 Sedan 1994",
            "Audi 100 Sedan 1994",
            "Audi 100 Wagon 1994",
            "Audi TT Hatchback 2011",
            "Audi S6 Sedan 2011",
            "Audi S5 Convertible 2012",
            "Audi S5 Coupe 2012",
            "Audi S4 Sedan 2012",
            "Audi S4 Sedan 2007",
            "Audi TT RS Coupe 2012",
            "BMW ActiveHybrid 5 Sedan 2012",
            "BMW 1 Series Convertible 2012",
            "BMW 1 Series Coupe 2012",
            "BMW 3 Series Sedan 2012",
            "BMW 3 Series Wagon 2012",
            "BMW 6 Series Convertible 2007",
            "BMW X5 SUV 2007",
            "BMW X6 SUV 2012",
            "BMW M3 Coupe 2012",
            "BMW M5 Sedan 2010",
            "BMW M6 Convertible 2010",
            "BMW X3 SUV 2012",
            "BMW Z4 Convertible 2012",
            "Bentley Continental Supersports Conv. Convertible 2012",
            "Bentley Arnage Sedan 2009",
            "Bentley Mulsanne Sedan 2011",
            "Bentley Continental GT Coupe 2012",
            "Bentley Continental GT Coupe 2007",
            "Bentley Continental Flying Spur Sedan 2007",
            "Bugatti Veyron 16.4 Convertible 2009",
            "Bugatti Veyron 16.4 Coupe 2009",
            "Buick Regal GS 2012",
            "Buick Rainier SUV 2007",
            "Buick Verano Sedan 2012",
            "Buick Enclave SUV 2012",
            "Cadillac CTS-V Sedan 2012",
            "Cadillac SRX SUV 2012",
            "Cadillac Escalade EXT Crew Cab 2007",
            "Chevrolet Silverado 1500 Hybrid Crew Cab 2012",
            "Chevrolet Corvette Convertible 2012",
            "Chevrolet Corvette ZR1 2012",
            "Chevrolet Corvette Ron Fellows Edition Z06 2007",
            "Chevrolet Traverse SUV 2012",
            "Chevrolet Camaro Convertible 2012",
            "Chevrolet HHR SS 2010",
            "Chevrolet Impala Sedan 2007",
            "Chevrolet Tahoe Hybrid SUV 2012",
            "Chevrolet Sonic Sedan 2012",
            "Chevrolet Express Cargo Van 2007",
            "Chevrolet Avalanche Crew Cab 2012",
            "Chevrolet Cobalt SS 2010",
            "Chevrolet Malibu Hybrid Sedan 2010",
            "Chevrolet TrailBlazer SS 2009",
            "Chevrolet Silverado 2500HD Regular Cab 2012",
            "Chevrolet Silverado 1500 Classic Extended Cab 2007",
            "Chevrolet Express Van 2007",
            "Chevrolet Monte Carlo Coupe 2007",
            "Chevrolet Malibu Sedan 2007",
            "Chevrolet Silverado 1500 Extended Cab 2012",
            "Chevrolet Silverado 1500 Regular Cab 2012",
            "Chrysler Aspen SUV 2009",
            "Chrysler Sebring Convertible 2010",
            "Chrysler Town and Country Minivan 2012",
            "Chrysler 300 SRT-8 2010",
            "Chrysler Crossfire Convertible 2008",
            "Chrysler PT Cruiser Convertible 2008",
            "Daewoo Nubira Wagon 2002",
            "Dodge Caliber Wagon 2012",
            "Dodge Caliber Wagon 2007",
            "Dodge Caravan Minivan 1997",
            "Dodge Ram Pickup 3500 Crew Cab 2010",
            "Dodge Ram Pickup 3500 Quad Cab 2009",
            "Dodge Sprinter Cargo Van 2009",
            "Dodge Journey SUV 2012",
            "Dodge Dakota Crew Cab 2010",
            "Dodge Dakota Club Cab 2007",
            "Dodge Magnum Wagon 2008",
            "Dodge Challenger SRT8 2011",
            "Dodge Durango SUV 2012",
            "Dodge Durango SUV 2007",
            "Dodge Charger Sedan 2012",
            "Dodge Charger SRT-8 2009",
            "Eagle Talon Hatchback 1998",
            "FIAT 500 Abarth 2012",
            "FIAT 500 Convertible 2012",
            "Ferrari FF Coupe 2012",
            "Ferrari California Convertible 2012",
            "Ferrari 458 Italia Convertible 2012",
            "Ferrari 458 Italia Coupe 2012",
            "Fisker Karma Sedan 2012",
            "Ford F-450 Super Duty Crew Cab 2012",
            "Ford Mustang Convertible 2007",
            "Ford Freestar Minivan 2007",
            "Ford Expedition EL SUV 2009",
            "Ford Edge SUV 2012",
            "Ford Ranger SuperCab 2011",
            "Ford GT Coupe 2006",
            "Ford F-150 Regular Cab 2012",
            "Ford F-150 Regular Cab 2007",
            "Ford Focus Sedan 2007",
            "Ford E-Series Wagon Van 2012",
            "Ford Fiesta Sedan 2012",
            "GMC Terrain SUV 2012",
            "GMC Savana Van 2012",
            "GMC Yukon Hybrid SUV 2012",
            "GMC Acadia SUV 2012",
            "GMC Canyon Extended Cab 2012",
            "Geo Metro Convertible 1993",
            "HUMMER H3T Crew Cab 2010",
            "HUMMER H2 SUT Crew Cab 2009",
            "Honda Odyssey Minivan 2012",
            "Honda Odyssey Minivan 2007",
            "Honda Accord Coupe 2012",
            "Honda Accord Sedan 2012",
            "Hyundai Veloster Hatchback 2012",
            "Hyundai Santa Fe SUV 2012",
            "Hyundai Tucson SUV 2012",
            "Hyundai Veracruz SUV 2012",
            "Hyundai Sonata Hybrid Sedan 2012",
            "Hyundai Elantra Sedan 2007",
            "Hyundai Accent Sedan 2012",
            "Hyundai Genesis Sedan 2012",
            "Hyundai Sonata Sedan 2012",
            "Hyundai Elantra Touring Hatchback 2012",
            "Hyundai Azera Sedan 2012",
            "Infiniti G Coupe IPL 2012",
            "Infiniti QX56 SUV 2011",
            "Isuzu Ascender SUV 2008",
            "Jaguar XK XKR 2012",
            "Jeep Patriot SUV 2012",
            "Jeep Wrangler SUV 2012",
            "Jeep Liberty SUV 2012",
            "Jeep Grand Cherokee SUV 2012",
            "Jeep Compass SUV 2012",
            "Lamborghini Reventon Coupe 2008",
            "Lamborghini Aventador Coupe 2012",
            "Lamborghini Gallardo LP 570-4 Superleggera 2012",
            "Lamborghini Diablo Coupe 2001",
            "Land Rover Range Rover SUV 2012",
            "Land Rover LR2 SUV 2012",
            "Lincoln Town Car Sedan 2011",
            "MINI Cooper Roadster Convertible 2012",
            "Maybach Landaulet Convertible 2012",
            "Mazda Tribute SUV 2011",
            "McLaren MP4-12C Coupe 2012",
            "Mercedes-Benz 300-Class Convertible 1993",
            "Mercedes-Benz C-Class Sedan 2012",
            "Mercedes-Benz SL-Class Coupe 2009",
            "Mercedes-Benz E-Class Sedan 2012",
            "Mercedes-Benz S-Class Sedan 2012",
            "Mercedes-Benz Sprinter Van 2012",
            "Mitsubishi Lancer Sedan 2012",
            "Nissan Leaf Hatchback 2012",
            "Nissan NV Passenger Van 2012",
            "Nissan Juke Hatchback 2012",
            "Nissan 240SX Coupe 1998",
            "Plymouth Neon Coupe 1999",
            "Porsche Panamera Sedan 2012",
            "Ram C/V Cargo Van Minivan 2012",
            "Rolls-Royce Phantom Drophead Coupe Convertible 2012",
            "Rolls-Royce Ghost Sedan 2012",
            "Rolls-Royce Phantom Sedan 2012",
            "Scion xD Hatchback 2012",
            "Spyker C8 Convertible 2009",
            "Spyker C8 Coupe 2009",
            "Suzuki Aerio Sedan 2007",
            "Suzuki Kizashi Sedan 2012",
            "Suzuki SX4 Hatchback 2012",
            "Suzuki SX4 Sedan 2012",
            "Tesla Model S Sedan 2012",
            "Toyota Sequoia SUV 2012",
            "Toyota Camry Sedan 2012",
            "Toyota Corolla Sedan 2012",
            "Toyota 4Runner SUV 2012",
            "Volkswagen Golf Hatchback 2012",
            "Volkswagen Golf Hatchback 1991",
            "Volkswagen Beetle Hatchback 2012",
            "Volvo C30 Hatchback 2012",
            "Volvo 240 Sedan 1993",
            "Volvo XC90 SUV 2007",
            "smart fortwo Convertible 2012"
        ]
    templates = [
            lambda c: f"a photo of a {c}, a type of car.",
            lambda c: f"a photo of a {c}.",
            lambda c: f"a photo of the {c}.",
            lambda c: f"a photo of my {c}.",
            lambda c: f"i love my {c}!",
            lambda c: f"a photo of my dirty {c}.",
            lambda c: f"a photo of my clean {c}.",
            lambda c: f"a photo of my new {c}.",
            lambda c: f"a photo of my old {c}."
        ]
    
class SUN397():
    name = "SUN397"
    classnames = [
            "abbey",
            "airplane cabin",
            "airport terminal",
            "alley",
            "amphitheater",
            "amusement arcade",
            "amusement park",
            "anechoic chamber",
            "apartment building/outdoor",
            "apse/indoor",
            "aquarium",
            "aqueduct",
            "arch",
            "archive",
            "arrival gate/outdoor",
            "art gallery",
            "art school",
            "art studio",
            "assembly line",
            "athletic field/outdoor",
            "atrium/public",
            "attic",
            "auditorium",
            "auto factory",
            "badlands",
            "badminton court/indoor",
            "baggage claim",
            "bakery/shop",
            "balcony/exterior",
            "balcony/interior",
            "ball pit",
            "ballroom",
            "bamboo forest",
            "banquet hall",
            "bar",
            "barn",
            "barndoor",
            "baseball field",
            "basement",
            "basilica",
            "basketball court/outdoor",
            "bathroom",
            "batters box",
            "bayou",
            "bazaar/indoor",
            "bazaar/outdoor",
            "beach",
            "beauty salon",
            "bedroom",
            "berth",
            "biology laboratory",
            "bistro/indoor",
            "boardwalk",
            "boat deck",
            "boathouse",
            "bookstore",
            "booth/indoor",
            "botanical garden",
            "bow window/indoor",
            "bow window/outdoor",
            "bowling alley",
            "boxing ring",
            "brewery/indoor",
            "bridge",
            "building facade",
            "bullring",
            "burial chamber",
            "bus interior",
            "butchers shop",
            "butte",
            "cabin/outdoor",
            "cafeteria",
            "campsite",
            "campus",
            "canal/natural",
            "canal/urban",
            "candy store",
            "canyon",
            "car interior/backseat",
            "car interior/frontseat",
            "carrousel",
            "casino/indoor",
            "castle",
            "catacomb",
            "cathedral/indoor",
            "cathedral/outdoor",
            "cavern/indoor",
            "cemetery",
            "chalet",
            "cheese factory",
            "chemistry lab",
            "chicken coop/indoor",
            "chicken coop/outdoor",
            "childs room",
            "church/indoor",
            "church/outdoor",
            "classroom",
            "clean room",
            "cliff",
            "cloister/indoor",
            "closet",
            "clothing store",
            "coast",
            "cockpit",
            "coffee shop",
            "computer room",
            "conference center",
            "conference room",
            "construction site",
            "control room",
            "control tower/outdoor",
            "corn field",
            "corral",
            "corridor",
            "cottage garden",
            "courthouse",
            "courtroom",
            "courtyard",
            "covered bridge/exterior",
            "creek",
            "crevasse",
            "crosswalk",
            "cubicle/office",
            "dam",
            "delicatessen",
            "dentists office",
            "desert/sand",
            "desert/vegetation",
            "diner/indoor",
            "diner/outdoor",
            "dinette/home",
            "dinette/vehicle",
            "dining car",
            "dining room",
            "discotheque",
            "dock",
            "doorway/outdoor",
            "dorm room",
            "driveway",
            "driving range/outdoor",
            "drugstore",
            "electrical substation",
            "elevator/door",
            "elevator/interior",
            "elevator shaft",
            "engine room",
            "escalator/indoor",
            "excavation",
            "factory/indoor",
            "fairway",
            "fastfood restaurant",
            "field/cultivated",
            "field/wild",
            "fire escape",
            "fire station",
            "firing range/indoor",
            "fishpond",
            "florist shop/indoor",
            "food court",
            "forest/broadleaf",
            "forest/needleleaf",
            "forest path",
            "forest road",
            "formal garden",
            "fountain",
            "galley",
            "game room",
            "garage/indoor",
            "garbage dump",
            "gas station",
            "gazebo/exterior",
            "general store/indoor",
            "general store/outdoor",
            "gift shop",
            "golf course",
            "greenhouse/indoor",
            "greenhouse/outdoor",
            "gymnasium/indoor",
            "hangar/indoor",
            "hangar/outdoor",
            "harbor",
            "hayfield",
            "heliport",
            "herb garden",
            "highway",
            "hill",
            "home office",
            "hospital",
            "hospital room",
            "hot spring",
            "hot tub/outdoor",
            "hotel/outdoor",
            "hotel room",
            "house",
            "hunting lodge/outdoor",
            "ice cream parlor",
            "ice floe",
            "ice shelf",
            "ice skating rink/indoor",
            "ice skating rink/outdoor",
            "iceberg",
            "igloo",
            "industrial area",
            "inn/outdoor",
            "islet",
            "jacuzzi/indoor",
            "jail/indoor",
            "jail cell",
            "jewelry shop",
            "kasbah",
            "kennel/indoor",
            "kennel/outdoor",
            "kindergarden classroom",
            "kitchen",
            "kitchenette",
            "labyrinth/outdoor",
            "lake/natural",
            "landfill",
            "landing deck",
            "laundromat",
            "lecture room",
            "library/indoor",
            "library/outdoor",
            "lido deck/outdoor",
            "lift bridge",
            "lighthouse",
            "limousine interior",
            "living room",
            "lobby",
            "lock chamber",
            "locker room",
            "mansion",
            "manufactured home",
            "market/indoor",
            "market/outdoor",
            "marsh",
            "martial arts gym",
            "mausoleum",
            "medina",
            "moat/water",
            "monastery/outdoor",
            "mosque/indoor",
            "mosque/outdoor",
            "motel",
            "mountain",
            "mountain snowy",
            "movie theater/indoor",
            "museum/indoor",
            "music store",
            "music studio",
            "nuclear power plant/outdoor",
            "nursery",
            "oast house",
            "observatory/outdoor",
            "ocean",
            "office",
            "office building",
            "oil refinery/outdoor",
            "oilrig",
            "operating room",
            "orchard",
            "outhouse/outdoor",
            "pagoda",
            "palace",
            "pantry",
            "park",
            "parking garage/indoor",
            "parking garage/outdoor",
            "parking lot",
            "parlor",
            "pasture",
            "patio",
            "pavilion",
            "pharmacy",
            "phone booth",
            "physics laboratory",
            "picnic area",
            "pilothouse/indoor",
            "planetarium/outdoor",
            "playground",
            "playroom",
            "plaza",
            "podium/indoor",
            "podium/outdoor",
            "pond",
            "poolroom/establishment",
            "poolroom/home",
            "power plant/outdoor",
            "promenade deck",
            "pub/indoor",
            "pulpit",
            "putting green",
            "racecourse",
            "raceway",
            "raft",
            "railroad track",
            "rainforest",
            "reception",
            "recreation room",
            "residential neighborhood",
            "restaurant",
            "restaurant kitchen",
            "restaurant patio",
            "rice paddy",
            "riding arena",
            "river",
            "rock arch",
            "rope bridge",
            "ruin",
            "runway",
            "sandbar",
            "sandbox",
            "sauna",
            "schoolhouse",
            "sea cliff",
            "server room",
            "shed",
            "shoe shop",
            "shopfront",
            "shopping mall/indoor",
            "shower",
            "skatepark",
            "ski lodge",
            "ski resort",
            "ski slope",
            "sky",
            "skyscraper",
            "slum",
            "snowfield",
            "squash court",
            "stable",
            "stadium/baseball",
            "stadium/football",
            "stage/indoor",
            "staircase",
            "street",
            "subway interior",
            "subway station/platform",
            "supermarket",
            "sushi bar",
            "swamp",
            "swimming pool/indoor",
            "swimming pool/outdoor",
            "synagogue/indoor",
            "synagogue/outdoor",
            "television studio",
            "temple/east asia",
            "temple/south asia",
            "tennis court/indoor",
            "tennis court/outdoor",
            "tent/outdoor",
            "theater/indoor procenium",
            "theater/indoor seats",
            "thriftshop",
            "throne room",
            "ticket booth",
            "toll plaza",
            "topiary garden",
            "tower",
            "toyshop",
            "track/outdoor",
            "train railway",
            "train station/platform",
            "tree farm",
            "tree house",
            "trench",
            "underwater/coral reef",
            "utility room",
            "valley",
            "van interior",
            "vegetable garden",
            "veranda",
            "veterinarians office",
            "viaduct",
            "videostore",
            "village",
            "vineyard",
            "volcano",
            "volleyball court/indoor",
            "volleyball court/outdoor",
            "waiting room",
            "warehouse/indoor",
            "water tower",
            "waterfall/block",
            "waterfall/fan",
            "waterfall/plunge",
            "watering hole",
            "wave",
            "wet bar",
            "wheat field",
            "wind farm",
            "windmill",
            "wine cellar/barrel storage",
            "wine cellar/bottle storage",
            "wrestling ring/indoor",
            "yard",
            "youth hostel"
        ]
    templates = [
            lambda c: f"a photo of a {c}.",
            lambda c: f"a photo of the {c}."
        ]

# Experimental datasets
dataset_list = [
    Aircraft,
    Caltech101,
    CIFAR100,
    DTD,
    EuroSAT,
    Flowers,
    Food,
    MNIST,
    OxfordPet,
    StanfordCars,
    SUN397,
]

name_temp_info = {}

for dataset in dataset_list:
    name_temp_info[dataset.name] = (dataset.classnames, dataset.templates)
